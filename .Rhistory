plot_ss(x = mlb11$at_bats, y = mlb11$runs, showSquares = TRUE)
plot_ss(x = mlb11$at_bats, y = mlb11$runs, showSquares = TRUE)
plot_ss(x = mlb11$at_bats, y = mlb11$runs, showSquares = TRUE)
plot_ss(x = mlb11$at_bats, y = mlb11$runs, showSquares = TRUE)
plot_ss(x = mlb11$at_bats, y = mlb11$runs, showSquares = TRUE)
plot_ss(x = mlb11$at_bats, y = mlb11$runs, showSquares = TRUE)
plot_ss(x = mlb11$at_bats, y = mlb11$runs, showSquares = TRUE)
plot_ss(x = mlb11$at_bats, y = mlb11$runs, showSquares = TRUE)
plot_ss(x = mlb11$at_bats, y = mlb11$runs, showSquares = TRUE)
plot_ss(x = mlb11$at_bats, y = mlb11$runs, showSquares = TRUE)
plot_ss(x = mlb11$at_bats, y = mlb11$runs, showSquares = TRUE)
plot_ss(x = mlb11$at_bats, y = mlb11$runs)
plot_ss(x = mlb11$at_bats, y = mlb11$runs)
plot_ss(x = mlb11$at_bats, y = mlb11$runs)
plot_ss(x = mlb11$at_bats, y = mlb11$runs)
plot_ss(x = mlb11$at_bats, y = mlb11$runs, showSquares = TRUE)
plot_ss(x = mlb11$at_bats, y = mlb11$runs, showSquares = TRUE)
plot_ss(x = mlb11$at_bats, y = mlb11$runs, showSquares = TRUE)
plot_ss(x = mlb11$at_bats, y = mlb11$runs, showSquares = TRUE)
plot_ss(x = mlb11$at_bats, y = mlb11$runs, showSquares = TRUE)
m1 <- lm(runs ~ at_bats, data = mlb11)
summary(m1)
load(url("http://www.openintro.org/stat/data/mlb11.RData"))
ml <- lm(runs ~ at_bats, data = mlb11)
summary(ml)
lm_predictRuns_fromHomeruns <- lm(runs ~ homeruns, data = mlb11)
lm_predictRuns_fromHomeruns
ml <- lm(runs ~ homeruns, data = mlb11)
summary(ml)
summary(lm_predictRuns_fromHomeruns)
ml <- lm(runs ~ at_bats, data = mlb11)
summary(ml)
plot(mlb11$runs ~ mlb11$at_bats)
abline(ml)
mlb11$at_bats==5579
summary(mlb11$at_bats==5579)
head(mlb11$at_bats==5579)
mlb11$at_bats==5579
subset(mlb11, mlb11$at_bats==5579)
ml <- lm(runs ~ at_bats, data = mlb11)
summary(ml)
plot(m1$residuals ~ mlb11$at_bats)
plot(ml$residuals ~ mlb11$at_bats)
abline(h = 0, lty = 3)
hist(m1$residuals)
hist(ml$residuals)
qqnorm(m1$residuals)
qqnorm(ml$residuals)
qqline(ml$residuals)
names(mlb11)
lm_hits <- lm(runs ~ hits, data = mlb11)
summary(lm_hits)
lm_wins <- lm(runs ~ wins, data = mlb11)
summary(lm_wins)
lm_bat_avg <- lm(runs ~ bat_avg, data = mlb11)
summary(lm_bat_avg)
plot(lm_hits$residuals ~ mlbl11$hits)
plot(lm_hits$residuals ~ mlb11$hits)
abline(h = 0, lty = 3)
plot(lm_bat_avg$residuals ~ mlb11$bat_avg)
abline(h = 0, lty = 3)
hist(lm_hits$residuals)
hist(lm_bat_avg$residuals)
qqnorm(lm_hits$residuals)
qline(lm_hits$residuals)
qqline(lm_hits$residuals)
qqnorm(lm_bat_avg$residuals)
qqline(lm_bat_avg$residuals)
names(mlb11)
names(mlb11)
lm_new_obs <- lm(runs ~ new_obs, data = mlb11)
summary(lm_new_obs)
lm_new_slug <- lm(runs ~ new_slug, data = mlb11)
summary(lm_new_slug)
lm_new_onbase <- lm(runs ~ new_onbase, data = mlb11)
summary(lm_new_onbase)
plot(lm_new_obs$residuals ~ mlb11$new_obs)
abline(h = 0, lty = 3)
plot(lm_new_slug$residuals ~ mlb11$new_slug)
abline(h = 0, lty = 3)
plot(lm_new_onbase$residuals ~ mlb11$new_onbase)
abline(h = 0, lty = 3)
hist(lm_new_obs$residuals)
hist(lm_new_slug$residuals)
hist(lm_new_onbase$residuals)
qqnorm(lm_new_obs$residuals)
qqline(lm_new_obs$residuals)
qqnorm(lm_new_slug$residuals)
qqline(lm_new_slug$residuals)
qqnorm(lm_new_onbase$residuals)
qqline(lm_new_onbase$residuals)
qt(0.025, df = 394)
quit()
?read.table()
load(url("http://www.openintro.org/stat/data/evals.RData"))
dim(evals)
names(evals)
summary(evals$score)
hist(evals$score)
boxplot(evals$score)
plot(evals$score ~ evals$bty_avg)
?jitter
jitter(evals$score)
plot(evals$score ~ evals$bty_avg)
jitter(evals$bty_avg)
plot(evals$score ~ evals$bty_avg)
plot(jitter(evals$score) ~ evals$bty_avg)
plot(evals$score ~ jitter(evals$bty_avg)
)
plot(evals$score ~ evals$bty_avg)
m_bty <- lm(vals$score ~ evals$bty_avg, data = evals)
m_bty <- lm(evals$score ~ evals$bty_avg, data = evals)
summary(m_bty)
plot(m_bty)
m_bty <- lm(evals$score ~ evals$bty_avg, data = evals)
summary(m_bty)
abline(m bty)
abline(m_bty)
m_bty <- lm(evals$score ~ evals$bty_avg, data = evals)
plot(evals$score ~ evals$bty_avg)
m_bty <- lm(evals$score ~ evals$bty_avg, data = evals)
m_bty <- lm(evals$score ~ evals$bty_avg, data = evals)
m_bty <- lm(evals$score ~ evals$bty_avg, data = evals)
abline(m_bty)
load(url("http://www.openintro.org/stat/data/evals.RData"))
load(url("http://www.openintro.org/stat/data/evals.RData"))
plot(evals$score ~ evals$bty_avg)
m_bty <- lm(evals$score ~ evals$bty_avg, data = evals)
abline(m_bty)
summary(m_bty)
plot(m_bty$residuals ~ evals$bty_avg)
abline(h = 0, lty = 3)
hist(m_bty$residuals)
hist(m_bty$residuals)
qqnorm(m_bty$residuals)
qqline(m_bty$residuals)
plot(m_bty$residuals)
abline(h = 0, lty = 3)
plot(evals$bty_avg ~ evals$bty_f1lower)
cor(evals$bty_avg, evals$bty_f1lower)
plot(evals[, 13:19])
m_bty_gen <- lm(score ~ bty_avg + gender, data = evals)
summary(m_bty_gen)
plot(m_bty_gen$residuals ~ evals$bty_avg)
abline(h = 0, lty = 3)
plot(m_bty_gen$residuals ~ m_bty_gen$fitted)
abline(h = 0, lty = 3)
plot(abs(m_bty_gen$residuals) ~ m_bty_gen$fitted)
hist(m_bty_gen$residuals)
qqnorm(m_bty_gen$residuals)
qqline(m_bty_gen$residuals)
plot(m_bty_gen$residuals)
abline(h = 0, lty = 3)
multiLines(m_bty_gen)
m_bty_rank <- lm(score ~ bty_avg + rank, data = evals)
summary(m_bty_rank)
multiLines(m_bty_rank)
m_full <- lm(score ~ rank + ethnicity + gender + language + age + cls_perc_eval + cls_students + cls_level + cls_profs + cls_credits + bty_avg, data = evals)
m_full <- lm(score ~ rank + ethnicity + gender + language + age + cls_perc_eval + cls_students + cls_level + cls_profs + cls_credits + bty_avg, data = evals)
summary(m_full)
m_full <- lm(score ~ rank + ethnicity + gender + language + age + cls_perc_eval + cls_students + cls_level + cls_credits + bty_avg, data = evals)
summary(m_full)
m1 <- lm(score ~ ethnicity + gender + language + age + cls_perc_eval + cls_students + cls_level + cls_profs + cls_credits + bty_avg, data = evals)
summary(m1)$adj.r.squared
m2 = lm(score ~ rank + gender + language + age + cls_perc_eval + cls_students + cls_level + cls_profs + cls_credits + bty_avg, data = evals)
summary(m2)$adj.r.squared
m_full <- lm(score ~ rank + ethnicity + gender + language + age + cls_perc_eval + cls_students + cls_level + cls_profs + cls_credits + bty_avg, data = evals)
summary(m_full)$adj.r.squared
m_no_bty_avg <- lm(score ~ rank + ethnicity + gender + language + age + cls_perc_eval + cls_students + cls_level + cls_profs + cls_credits, data = evals)
summary(m_no_bty_avg)$adj.r.squared
m_no_cls_profs <- lm(score ~ rank + ethnicity + gender + language + age + cls_perc_eval + cls_students + cls_level + cls_credits + bty_avg, data = evals)
summary(m_no_cls_profs)$adj.r.squared
m_no_cls_students <- lm(score ~ rank + ethnicity + gender + language + age + cls_perc_eval + cls_level + cls_credits + bty_avg, data = evals)
summary(m_no_cls_students)$adj.r.squared
m_no_rank <- lm(score ~ ethnicity + gender + language + age + cls_perc_eval + cls_students + cls_level + cls_profs + cls_credits + bty_avg, data = evals)
summary(m_no_rank)
summary(m_no_rank)$adj.r.squared
library(UsingR)
library(MASS)
library(UsingR)
x=father.son$fheight
length(x)
round(sample(x,20),1)
seq(floor(min(x)),ceiling(max(x)))
hist(x,breaks=seq(floor(min(x)),ceiling(max(x))),main="Height histogram",xlab="Height in inches")
seq(floor(min(x)),ceiling(max(x)))
xs<-seq(floor(min(x)),ceiling(max(x)),0.1)
xs
plot(xs,ecdf(x)(xs),type="l",xlab="Height in inches",ylab="F(x)")
library(MASS)
library(UsingR)
x=father.son$fheight
length(x)
round(sample(x,20),1)
hist(x,breaks=seq(floor(min(x)),ceiling(max(x))),main="Height histogram",xlab="Height in inches")
seq(floor(min(x)),ceiling(max(x)))
xs<-seq(floor(min(x)),ceiling(max(x)),0.1)
xs
plot(xs,ecdf(x)(xs),type="l",xlab="Height in inches",ylab="F(x)")
mean(x)
sd(x)
1-pnorm(70,mean(x),sd(x))
1-pnorm(70,mean(x),sd(x))
mean(x>70)
1-pnorm(70,mean(x),sd(x))
mean(x)
sd(x)
mean(x>70)
1-pnorm(70,mean(x),sd(x))
mean(x<70)
pnorm(70,mean(x),sd(x))
mean(x<59)
pnorm(59,mean(x),sd(x))
mean(x<59)
mean(x<69)
pnorm(69,mean(x),sd(x))
mean(x>72)
1-pnorm(72,mean(x),sd(x))
ps <- seq(0.01,0.99,0.01)
qs <- quantile(x,ps)
qs
normalqs <- qnorm(ps,mean(x),sd(x))
plot(normalqs,qs,xlab="Normal percentiles",ylab="Observed Height percentiles")
abline(0,1) ##identity line
qqnorm(x)
qqline(x)
dbinom(8, size=10, p=0.13)
sum(dbinom(190:200, size=200, p=0.90)
)
dbinom(8, size=10, p=0.13)
sum(dbinom(190:200, size=200, p=0.90))
qt(0.025, df=25)
sum(dbinom(11:100, size=100, p=0.11))
pf(3.47, 2, 828, lower.tail=False)
pf(3.47, 2, 828, lower.tail=FALSE)
dbinom(3, size=4, p=0.5)
sum(dbinom(3:4, size=4, p=0.5)
)
sum(dbinom(3:4, size=4, p=0.5))
sum(dbinom(3:4, size=4, p=0.75))
choose(4,3)
choose(4,1)
choose(4,8)
choose(8,4)
1 - 0.7382812
choose(4,4)
choose(4,0)
(choose(4,3)*choose(4,1)) / choose(8,4)
16/70
16/70
> sum(dbinom(3:8, size=8, p=0.5))
sum(dbinom(3:8, size=8, p=0.5))
sum(dbinom(3:4, size=4, p=0.5))
dat=read.table("http://www.biostat.jhsph.edu/bstcourse/bio751/data/babies.data",header=TRUE)
dim(dat)
set.seed(1)
smokers=sample(dat$bwt[dat$smoke==1],10)
nonsmokers=sample(dat$bwt[dat$smoke==0],10)
cat("observed difference = ",mean(smokers)-mean(nonsmokers)," ounces")
mean(replicate(10, rnorm(10))()
)
replicate(10, rnorm(10))
mean(replicate(10, rnorm(10)))
set.seed(1)
replicate(10, rnorm(10))
replicate(10, rnorm(10))
replicate(10, rnorm(10, mean=0, sd=1))
mean(replicate(10, rnorm(10, mean=0, sd=1)))
median(replicate(10, rnorm(10, mean=0, sd=1)))
median(replicate(10, rnorm(10, mean=0, sd=1)))
median(rnorm(10, mean=0, sd=1))
median(rnorm(10, mean=0, sd=1))
median(rnorm(10, mean=0, sd=1))
median(rnorm(10, mean=0, sd=1))
replicate(10, rnorm(10, mean=0, sd=1))
median(replicate(1000, rnorm(10, mean=0, sd=1)))
sd(replicate(1000, rnorm(10, mean=0, sd=1)))
sd(replicate(1000, rnorm(10, mean=0, sd=1)))
sd(replicate(1000, rnorm(10, mean=0, sd=1)))
sd(replicate(1000, rnorm(10, mean=0, sd=1)))
sd(replicate(1000, rnorm(10, mean=0, sd=1)))
sd(replicate(1000, rnorm(10, mean=0, sd=1)))
sd(replicate(1000, rnorm(10, mean=0, sd=1)))
c <- replicate(1000, rnorm(10, mean=0, sd=1))
lentgh(c)
length(c)
hist(c)
median(rnorm(10, mean=0, sd=1))
median(rnorm(10, mean=0, sd=1))
median(rnorm(10, mean=0, sd=1))
median(rnorm(10, mean=0, sd=1))
median(rnorm(10, mean=0, sd=1))
median(rnorm(10, mean=0, sd=1))
length(c)
median(c)
median(c)
phenoData <- data.frame(treatment=factor(rep(c("control","drug"),each=4)),sex=factor(rep(rep(c("female","male"),each=2),2)))
view(phenoData)
phenoData
formula(~ treatment + sex, data=model.matrix(phenoData))
model.matrix(formula(~ treatment + sex), data=phenoData)
formula(model.matrix(phenoData$treatment ~ phenoData$sex))
model.matrix(formula(~ phenoData), treatment, sex)
library(dagdata)
data(maPooling)
u = exprs(maPooling)[,1]
v = exprs(maPooling)[,2]
plot(u, v)
cor(plot(u, v))
uv_lm <- lm(v ~ u)
summary(uv_lm)
x = exprs(maPooling)[,3]
y = exprs(maPooling)[,4]
u-v_x-y_lm <- lm(x-y ~ u-v)
summary(lm(x-y ~ u-v))
summary(lm(log(x/y) ~ log(u/v))
)
summary(lm(v ~ u))
plot(u, v)
plot((u-v), (x-y))
plot(log(u/v), log(x/y))
> summary(lm(log(x/y) ~ log(u/v)))
summary(lm(log(x/y) ~ log(u/v)))
x = matrix(c(1,3,8,9,20,4,16,11,15,2,10,18,14,6,7,19,13,17,12,5),ncol=2)
x
?kmeans
kmeans(x, centers=x[1:3,])
cluster
Clustering vector
cl <- kmeans(x, centers=x[1:3,])
cl$cluster
cl$cluster[1]
cl$cluster1
cl$cluster[1]
cl$cluster[2]
cl$cluster[3]
cl
cl$size
cl$cluster
table(x, cl$cluster)
table(x[], cl$cluster)
table(x[,], cl$cluster)
table(x[,1], cl$cluster)
x
table(x[,1:2], cl$cluster)
table(x[,2], cl$cluster)
x = matrix(c(1,3,8,9,20,4,16,11,15,2,10,18,14,6,7,19,13,17,12,5),ncol=2)
x
results <- kmeans(x, centers=x[1:3,])
results
results$cluster
table(x[,1], results$cluster)
table(x[,2], results$cluster)
plot(x, results$cluster)
plot(x[,1], results$cluster)
plot(x[,2], results$cluster)
plot(x[,1:2], results$cluster)
table(x[c(x$1, x$2], results$cluster)
table(x[c(x.1, x.2], results$cluster)
plot(x[1,], results$cluster)
table(x[1,], results$cluster)
table(x[,1], results$cluster)
table(x[1:10,], results$cluster)
table(x[1:10,1:2], results$cluster)
table(x[1:10,1], results$cluster)
table(x[1:10,2], results$cluster)
table(x[,2], results$cluster)
x = cbind(1:12/6,rep(1:3,each=4),rep(1:3,times=4),12:1/6)
x
?dist()
help.dist
library(devtools)
install_github("dagdata","genomicsclass")
library(dagdata)
data(tissuesGeneExpression)
library(Biobase)
rownames(tab) <- tab$filename
t <- ExpressionSet(e, AnnotatedDataFrame(tab))
t$Tissue <- factor(t$Tissue)
boxplot(exprs(t), range=0)
x <- t(exprs(t))
x
x <- t(exprs(t))
x <- t(exprs(t))
dim(x)
dim(exprs(t))
d <- dist(x)
class(d)
d[1,2]
as.matrix(d)[1,2]
sqrt(sum((x[1,] - x[2,])^2))
x = cbind(1:12/6,rep(1:3,each=4),rep(1:3,times=4),12:1/6)
x
sqrt(sum((x[,2] - x[,4])^2))
y <- t(x)
y
d <- dist(y)
class(d)
d[2,4]
as.matrix(d)[2,4]
x <- t(exprs(t))
d <- dist(x)
class(d)
as.matrix(d)[1,2]
sqrt(sum((x[1,] - x[2,])^2))
hc <- hclust(d)
hc
plot(hc)
library(rafalib)
mypar()
plot(hc, labels=t$Tissue)
myplclust(hc, labels=t$Tissue, lab.col=as.fumeric(t$Tissue))
hclusters <- cutree(hc, h=120)
table(true=t$Tissue, cluster=hclusters)
dim(x)
head(x)
dim(x)
plot(x[,1], x[,2])
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
plot(x[,1], x[,2])
km <- kmeans(x[,1:2], centers=3)
names(km)
plot(x[,1], x[,2], col=km$cluster, pch=16)
km$size
km$cluster
km <- kmeans(x, centers=3)
plot(x[,1], x[,2], col=km$cluster, pch=16)
km$size
km <- kmeans(x, centers=7)
table(true=t$Tissue, cluster=km$cluster)
x1 = matrix(c(1,3,8,9,20,4,16,11,15,2,10,18,14,6,7,19,13,17,12,5),ncol=2)
x1
plot(x1[,1], x1[,2])
km <- kmeans(x1[,1:2], centers=x1[1:3,])
names(km)
plot(x1[,1], x1[,2], col=km$cluster, pch=16)
km <- kmeans(x1, centers=x1[1:3,])
names(km)
plot(x1[,1], x1[,2], col=km$cluster, pch=16)
table(true=x, cluster=km$cluster)
x = matrix(c(1,3,8,9,20,4,16,11,15,2,10,18,14,6,7,19,13,17,12,5),ncol=2)
x
km <- kmeans(x, centers=x[1:3,])
names(km)
km$size
km$cluster
plot(x[,1], x[,2], col=km$cluster, pch=16)
table(x[,], km$cluster)
table(as.matrix(x), km$cluster)
table(x[,], as.matrix(km$cluster))
table(x[,1], km$cluster)
table(x[,2], km$cluster)
table(x[,], km$cluster)
table(x$rows, km$cluster)
table(x$rownames, km$cluster)
> plot(x[,1], x[,2], col=km$cluster, pch=16)
plot(x[,1], x[,2], col=km$cluster, pch=16)
library(devtools)
install_github("dagdata","genomicsclass")
library(dagdata)
data(tissuesGeneExpression)
library(Biobase)
rownames(tab) <- tab$filename
t <- ExpressionSet(e, AnnotatedDataFrame(tab))
t$Tissue <- factor(t$Tissue)
colnames(t) <- paste0(t$Tissue, seq_len(ncol(t)))
x <- t(exprs(t))
km <- kmeans(x, centers=3)
library(rafalib)
mypar()
plot(x[,1], x[,2], col=km$cluster, pch=16)
mds <- cmdscale(dist(x))
plot(mds, col=km$cluster, pch=16)
plot(mds, type="n")
text(mds, colnames(t), col=km$cluster)
plot(mds, type="n")
text(mds, colnames(t), col=as.fumeric(t$Tissue))
install.packages("RColorBrewer")
install.packages("RColorBrewer")
library(RColorBrewer)
hmcol <- colorRampPalette(brewer.pal(9, "GnBu"))(100)
library(genefilter)
rv <- rowVars(exprs(t))
idx <- order(-rv)[1:40]
idx
heatmap(exprs(t)[idx,], col=hmcol)
install.packages("gplots")
library(gplots)
cols <- palette(brewer.pal(8, "Dark2"))[t$Tissue]
cbind(colnames(t),cols)
heatmap.2(exprs(t)[idx,], trace="none", ColSideColors=cols, col=hmcol)
heatmap.2(exprs(t)[idx,], trace="none", ColSideColors=cols, col=hmcol)
library(class)
table(t$Tissue)
t <- t[,t$Tissue != "placenta"]
t$Tissue <- droplevels(t$Tissue)
table(t$Tissue)
x <- t(exprs(t))
dim(x)
library(caret)
install.packages("caret")
library(caret)
install.packages("caret")
quit
quit()
install.packages('caret', repos='http://cran.us.r-project.org')
library(caret)
sessionInfo()
quit()
setwd("~/datasciencecoursera")
